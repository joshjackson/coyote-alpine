#!/bin/sh
#
# Downloads a VEL Update
#
# Parameters: <method> <host[:/directory]> [user] [password]
#
# Return Status:
#	0 - Successful
#	1 - Communications Failure
#	2 - Parameter Error
#	3 - MD5 Hash Mismatch
#	4 - Missing account information for update.coyotelinux.com

if [ -r /etc/config/hwconfig ]; then
	. /etc/config/hwconfig
fi

METHOD=$1
UPDATE_HOST=`echo "$2" | cut -f 1 -d ":"`
UPDATE_DIR=`echo "$2" | cut -f 2 -d ":"`
UPDATE_USER=$3
UPDATE_PASS=$4

if [ -z "$METHOD" ]; then
	METHOD="ftp"
fi

if [ -z "$UPDATE_HOST" ]; then
	UPDATE_HOST="update.coyotelinux.com"
fi

if [ -z "$UPDATE_DIR" ]; then
	UPDATE_DIR="/${VEL_SYSTEM_ID}/${VEL_SYSTEM_VERSION}"
fi

# If the update is to come from the official update site, the user must have an
# account.
if [ "$UPDATE_HOST" = "update.coyotelinux.com" ]; then
	if [ ! -r /mnt/config/reginfo ]; then
		echo
		echo "Your account username and password are missing. Please set them now."
		echo
		echo -n "Account Name: "
		read UPDATE_USER
		echo -n "Account Password: "
		read UPDATE_PASS

		if [ -z "$UPDATE_USER" ] || [ -z "$UPDATE_PASS" ]; then
			exit 4
		else
			echo "UPDATE_USER='${UPDATE_USER}'" > /mnt/config/reginfo
			echo "UPDATE_PASS='${UPDATE_PASS}'" >> /mnt/config/reginfo
		fi
	else
		. /mnt/config/reginfo
	fi
else
	if [ -z "$UPDATE_USER" ]; then
		UPDATE_USER="anonymous"
	fi

	if [ -z "$UPDATE_PASS" ]; then
		UPDATE_PASS="updates@coyotelinux.com"
	fi
fi

cleanup() {
	# Make sure the temp area is clean
	rm -Rf /mnt/tmp/incoming 1> /dev/null 2> /dev/null
	# Remove the script if one was created
	[ -r /tmp/image_version ] && rm -f /tmp/image_version
	[ -r /tmp/ftp.scr ] && rm -f /tmp/ftp.scr
}

fw_ver_info() {

	read FW_VER
	read FW_DATE
	read FW_CSUM

	export FW_VER
	export FW_DATE
	export FW_CSUM

}


case $METHOD in
	tftp)
		echo
		echo "Starting TFTP system update from host $UPDATE_HOST"
		echo "get checksum" > /tmp/ftp.scr
		echo "get linux" >> /tmp/ftp.scr
		echo "get rootfs.img" >> /tmp/ftp.scr
		echo "get initrd.img" >> /tmp/ftp.scr
		echo "quit" >> /tmp/ftp.scr
		tftp $UPDATE_HOST < /tmp/ftp.scr
		;;
	ftp)
		SAVEDIR=$PWD
		cd /tmp
		[ -r image_version ] && rm -f image_version
		echo "Attempting to get remote image version..."
		echo "user $UPDATE_USER $UPDATE_PASS" > /tmp/ftp.scr
		echo "binary" >> /tmp/ftp.scr
		echo "cd $UPDATE_DIR" >> /tmp/ftp.scr
		echo "get image_version" >> /tmp/ftp.scr
		echo "quit" >> /tmp/ftp.scr
		ftp -p -n -i $UPDATE_HOST < /tmp/ftp.scr
		if [ ! $? = 0 ]; then
			cleanup
			echo "FTP Communications Error."
			exit 1
		fi
		# Prevent an attempt to read from the file causing the script to freeze
		echo >> image_version
		echo >> image_version
		echo >> image_version
		[ -r image_version ] && fw_ver_info < image_version
		NEW_VER=$FW_VER
		read OLD_VER < /etc/config/image_version
		YN="n"
		if [ -z "$NEW_VER" ]; then
			echo
			echo "----------------------[ WARNING ]---------------------------"
			echo "Unable to determine remote update version. Would you like to"
			echo -n "attempt the update anyway? [ N/y ]: "
			read YN
		elif [ "$NEW_VER" = "$OLD_VER" ]; then
			echo
			echo "------------------------[ NOTICE ]-----------------------------"
			echo "The remote file version is the same as the one you are currently"
			echo -n "running (${NEW_VER}). Perform the download anyway? [ N/y ]: "
			read YN
		elif [ "$NEW_VER" -lt "$OLD_VER" ]; then
			echo
			echo "----------------------------[ WARNING ]--------------------------------"
			echo "The remote version (${NEW_VER}) is older than the version that you"
			echo -n "are currently running (${OLD_VER})! Permorm the downgrade? [ N/y ]: "
			read YN
		else
			YN="y"
		fi

		[ -z "$YN" ] && YN="n"

		if [ ! "$YN" = "y" ] && [ ! "$YN" = "Y" ]; then
			cleanup
			exit
		fi

		if [ -d /mnt/tmp/incoming ]; then
			rm -Rf /mnt/tmp/incoming
		fi
		mkdir /mnt/tmp/incoming
		cd /mnt/tmp/incoming
		echo
		echo "Starting FTP system update from host ${UPDATE_HOST}..."
		echo "user $UPDATE_USER $UPDATE_PASS" > /tmp/ftp.scr
		echo "binary" >> /tmp/ftp.scr
		echo "cd $UPDATE_DIR" >> /tmp/ftp.scr
		echo "get fwupdate.img" >> /tmp/ftp.scr
		echo "quit" >> /tmp/ftp.scr
		ftp -p -n -i $UPDATE_HOST < /tmp/ftp.scr
		if [ ! $? = 0 ]; then
			cleanup
			echo "FTP Communications Error."
			exit 1
		fi
		;;
	*)
		echo "Unknown system update method: $METHOD"
		exit 2
		;;
esac

# Verify the downloaded files, and apply them if everything is OK
echo FW_CSUM > fwsum
echo -n "Verifying image checksum: "
md5sum -c fwsum 1> /dev/null 2> /dev/null

if [ $? = 0 ]; then
	echo "Passed."

	echo -n "Setting firmware restore point: "
	if [ ! -d /mnt/boot/flashback ]; then
		mkdir /mnt/boot/flashback
	else 
		rm -f /mnt/boot/flashback/* 1> /dev/null 2> /dev/null
	fi
	
	cp /mnt/boot/*.img /mnt/boot/flashback/
	rm -f /mnt/boot/initrd.img
	rm -f /mnt/boot/rootfs.img
	mv /mnt/boot/linux /mnt/boot/flashback/
	mv /mnt/boot/checksum /mnt/boot/flashback/
	cp /etc/config/image_version /mnt/boot/flashback/
	echo "Done."
	
	echo -n "Applying updates: "
	# Copy the new files into place
	cd /mnt
	tar -xf /mnt/tmp/incoming/fwupdate.img
	rm -Rf /mnt/tmp/incoming
	# Update the LILO boot loader info
	/mnt/sbin/lilo -r /mnt 1> /dev/null 2> /dev/null
	sync
	echo "Done. Rebooting system."
	echo
	sleep 1
	reboot
	sleep 3
	exit
else
	echo "Failed!"
	echo "MD5 hash does not match downloaded files, aborting update."
	cleanup
	exit 3
fi

cleanup
