restore_backup() {

	if [ -z "$1" ]; then
		echo "No configuration backup file was specified for restore."
		return
	fi

	if [ ! -r "$1" ]; then
		echo "Could not access the specified configuration backup file."
		return
	fi

	/bin/tar -tf $1 1> /dev/null 2> /dev/null
	if [ ! $? = 0 ]; then
		echo "Invalid or corrupt backup file specified."
	fi

	# Clear out some existing configuration data
	rm /opt/coyote/config/ssl.d/*.pem 1> /dev/null 2> /dev/null
	rm /opt/coyote/config/ssl.d/cacerts/* 1> /dev/null 2> /dev/null
	rm /opt/coyote/config/ssl.d/crl/* 1> /dev/null 2> /dev/null

	cd /opt/coyote/config
	tar -xf $1
	if [ ! $? = 0 ]; then
		echo "Failed to restore system configuration."
	else
		echo "System configuration restored successfully."
	fi

}

restore_firmware() {

	if [ -r /mnt/boot/flashback/image_version ]; then
		cd /mnt/boot/flashback
		md5sum -s -c checksum
		if [ ! $? = 0 ]; then
			echo "Flashback images failed checksum integrity tests. Aborting rollback."
			return 1
		fi
		echo
		echo -n "Performing firmware rollback... "
		rm -f /mnt/boot/linux
		rm -f /mnt/boot/*.img
		rm -f /mnt/boot/checksum
		mv /mnt/boot/flashback/linux /mnt/boot/
		mv /mnt/boot/flashback/*.img /mnt/boot/
		mv /mnt/boot/flashback/checksum /mnt/boot/
		rm -f /mnt/boot/flashback/image_version
		lilo -r /mnt 1> /dev/null 2> /dev/null
		echo "done."
		echo
		echo "Please reboot the firewall to reload the firmware."
		return 0
	fi

}


apply_firmware_update() {

	# This routine is not used for Coyote Linux 3.1+
	# Package management and system updates will be handled using 
	# Alpine's APK package manager
	# 
	
	# We will assume that the APKs have been applied. Simply reboot
	sudo /sbin/reboot
	return 0
		
	# mount_flash_rw
	# if ! [ -r "$1" ]; then
	# 	return 1
	# fi

	# # Set a firmware restore point
    #     if [ ! -d /mnt/boot/flashback ]; then
    #             mkdir /mnt/boot/flashback
    #     else
    #             rm -f /mnt/boot/flashback/* 1> /dev/null 2> /dev/null
    #     fi
	
    #     mv /mnt/boot/rootfs.img /mnt/boot/flashback/
    #     mv /mnt/boot/initrd.img /mnt/boot/flashback/
	# 	cp /mnt/boot/*.img /mnt/boot/flashback/
    #     mv /mnt/boot/linux /mnt/boot/flashback/
    #     mv /mnt/boot/checksum /mnt/boot/flashback/
    #     cp /etc/config/image_version /mnt/boot/flashback/


    #     # Copy the new files into place
    #     cd /mnt
    #     tar -xf $1
    #     rm -f $1
    #     # Update the LILO boot loader info
    #     lilo -r /mnt 1> /dev/null 2> /dev/null
	# 	mount_flash_ro
    #     sync
    #     reboot
 
}
