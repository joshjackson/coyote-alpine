#!/bin/sh
#
# Coyote Linux DHCP client up-down script
#
# Called by udhcpc to bring dhcp assigned interfaces up and down
#
# Author: Joshua Jackson
# Date: 05/01/2003


dump_info() {

	# Create the interface info file
	echo "dhcp_ip=$ip"
	echo "dhcp_mask=$mask"
	echo "dhcp_router=$router"
	echo "dhcp_broadcast=$broadcast"
	echo "dhcp_hostname=$hostname"
	echo "dhcp_domain=$domain"
	echo "dhcp_mtu=$mtu"
	echo "dhcp_dns=${dns}"
	echo "dhcp_subnet=$subnet"

}

deconfig_if () {

	# If IPSEC is running, stop it
	/usr/sbin/ipsecctl ifdown $interface 1> /dev/null 2> /dev/null&
	
	# Put the interface in an unconfigured state
	ip addr flush dev $interface 1> /dev/null 2> /dev/null
	ip link set $interface up
	if [ -r /etc/dhcpc/${interface}.info ]; then
		rm -f /etc/dhcpc/${interface}.info
	fi
}

build_resolv () {

	if [ ! -z "${dns}" ]; then
	    rm -f /etc/dhcpc/resolv.conf
	    touch /etc/dhcpc/resolv.conf
	    for DNSSRV in "${dns}"; do
		echo "nameserver $DNSSRV" >> /etc/dhcpc/resolv.conf
	    done
	
	    rm -f /etc/resolv.conf
	    touch /etc/resolv.conf
	    
	    if [ -r /etc/resolv.static ]; then
		cat /etc/resolv.static >> /etc/resolv.conf
	    fi
	    
	    cat /etc/dhcpc/resolv.conf >> /etc/resolv.conf
	fi

}

bind_if () {

	if [ ! -z "$mtu" ]; then
		ip link set $interface mtu $mtu
	fi

	IFCMD="ip addr add ${ip}/${mask}"
	if [ -z "$broadcast" ]; then
		eval `ipcalc -b ${ip}/${mask} -s`
		broadcast=$BROADCAST
	fi
	IFCMD="$IFCMD broadcast ${broadcast}"
	IFCMD="$IFCMD dev $interface" 

	`$IFCMD`

	if [ ! -z "$router" ]; then
		ip route add default via $router
	fi

	if [ ! -z "${dns}" ]; then
	    build_resolv
	fi
	
	dump_info > /etc/dhcpc/${interface}.info

	[ -x /usr/sbin/ipsecctl ] && /usr/sbin/ipsecctl ifup $interface 1> /dev/null 2> /dev/null&

}

# Renew an existing lease
renew_if () {

	IPSEC_RESTART=NO

	# Load the info file
	if [ -r /etc/dhcpc/${interface}.info ]; then
		. /etc/dhcpc/${interface}.info
	fi

	# If the MTU has changed, update it
	if [ ! "$dhcp_mtu" = "$mtu" ]; then
		ip link set $interface mtu $mtu
	fi

	# If the subnet mask or the broadcast for the for the network has changed,
	# some services that are interface bound need to be restarted
	if [ ! "$dhcp_subnet" = "$subnet" ] && [ ! -z "$subnet" ]; then
		IPSEC_RESTART=YES
		ifconfig $interface netmask $subnet
	fi
	
	if [ -z "$broadcast" ]; then
		eval `ipcalc -b ${ip}/${mask} -s`
		broadcast=$BROADCAST
	fi
	
	if [ ! "$dhcp_broadcast" = "$broadcast" ]; then
		IPSEC_RESTART=YES
		ifconfig $interface broadcast $broadcast
	fi

	# If the default router has changed, delete the current route and recreate it
	if [ ! "$dhcp_router" = "$router" ]; then
		IPSEC_RESTART=YES
		ip route delete default
		if [ ! -z "$router" ]; then
			ip route add default via $router
		fi
	fi

	# If the DNS servers have changed, update the resolv.conf file
	if [ ! "${dhcp_dns}" = "${dns}" ]; then
	    build_resolv
	fi

	if [ "$IPSEC_RESTART" = "YES" ]; then
		logger -p daemon.info -t udhcpc "DHCP parameters changed, forcing an IPSEC restart."
		[ -x /usr/sbin/ipsecctl ] && /usr/sbin/ipsecctl ifchg $interface 1> /dev/null 2> /dev/null&
	fi
	
	dump_info > /etc/dhcpc/${interface}.info
		
}

case $1 in

	deconfig)
		deconfig_if
		;;
	bound)
		bind_if
		;;
	renew)
		renew_if
		;;
	nak)
		logger -p daemon.info -t udhcpc "NAK received for dhcp request on ${interface}."
		;;
	leasefail)
		logger -p daemon.info -t udhcpc "Failed to obtain DHCP lease, flushing interface ${interface}."
		deconfig_if
		;;
	*)
		logger -p daemon.info -t udhcpc "Invalid call to the udhcpc up-down script."
		;;
esac


